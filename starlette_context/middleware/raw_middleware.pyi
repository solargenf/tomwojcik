from starlette.requests import HTTPConnection, Request as Request
from starlette.types import ASGIApp as ASGIApp, Message as Message, Receive as Receive, Scope as Scope, Send as Send
from starlette_context.plugins import Plugin
from typing import Any, Optional, Sequence, Union

class RawContextMiddleware:
    app: Any = ...
    plugins: Any = ...
    def __init__(self, app: ASGIApp, plugins: Optional[Sequence[Plugin]]=...) -> None: ...
    async def set_context(self, request: Union[Request, HTTPConnection]) -> dict: ...
    @staticmethod
    def get_request_object(scope: Any, receive: Any, send: Any) -> Union[Request, HTTPConnection]: ...
    async def __call__(self, scope: Scope, receive: Receive, send: Send) -> None: ...
